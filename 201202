# 오늘 한 일
## 패스트캠퍼스 The Red 프론트엔드 Back to the Basics : 지속 가능한 코드작성과 성능 향상법 강의를 듣고 있다. 
- '도전에 가장 큰 걸림돌은 능력이 아니라 두려움이다'
- 번지점프처럼 눈 한 번 딱 감고 뛰어내리면 그 다음은 알아서 되니까.
- 직접 겪어보지 않고 판단하는 것을 의식적으로 지양한다.

## 프론트엔드 공부방법 조언
- 공부해야 할 양이 많으므로 천천히 범위를 넓혀가되 필요한 부분에 한해서 깊이 파라. 공부할 범위를 축소해야 한다. 
- 공식문서를 가까이 하라. 가장 정확하고 빠르게 업데이트 된다. 한 번에 소화하려 말고 자주 접하라.
- 이것저것 많이 경험해보라. (코드를 많이 읽는 것, 개인 프로젝트를 하는 것)

## 기술 트렌드를 조금 더 빨리 예측하는 법
- github 트렌딩 
- 트렌드 정리 메일 구독
- 프론트엔드 SNS 팔로우
- 영문, 해외 자료를 자주 접한다. 해외에서 유행 후 국내 유입되는 경우가 많다. 
- 채용공고는 강력한 신호이다.

## 새로운 프레임워크/라이브러리 접근법
- 기술이 해결하고자 하는 문제, 디자인 컨셉 등을 살펴보며 추구하는 방향을 이해한다.
- 쉬운 예제부터 시작하며 원리를 이해한다. 코드의 행간을 이해한다. 

## 프론트엔드의 협업 과정 발생 가능 문제와 해결방법
### 디자이너와의 협업
1. 결과물에서 시각적인 요소의 비중이 크다.
- 개발 문외한도 간섭하기 쉽다. 디자이너와 협업하여 자주 사용하는 스타일을 컴포넌트화 한다.
2. MVP
- 최소 기능으로 구현한 뒤 피드백을 받아가며 완성한다. 
- 최소비용으로 자주 반복하라. 
- 일정측정이 쉽고 진행 상황 보고가 용이해진다.

### 백엔드 개발자
- api 위주로 협업한다.
- api 정의 책임 소재에 대한 문제 발생 시, 사용이 용이하게 데이터를 받으려면 프론트엔드에서 정의하는 것이 좋다. 
- api 협업과 정의에 대한 커뮤니케이션이 가능할 정도의 백엔드 지식은 갖춰야 한다. 

### 안 된다는 말은 참자. 
- 까다롭고 부정적이라는 느낌을 줄 수 있다. 

# 느낀점
- 잔디심기를 멈춘동안 현 직장 관련 직무로 이직 준비를 했다. 너무 오래 공부를 쉰 느낌이라 걱정되었는데 마지막 TIL을 보니 3~4개월 정도 흘러있었다. 더 늦기 전에 돌아와 다행이다.
- 패스트캠퍼스 강의 퀄리티에 대한 걱정이 있었다. 다루는 강의가 많아서인지 강의별 만족도 차이가 꽤 커보였다.
특히 The Red는 후기조차 많지 않았지만.. 업계에서 유명한 분들의 마인드라도 모니터 너머로 느낄 수 있다면 남는 장사라 생각했기에 듣게 되었다.
결과적으로는 만족스럽다! 지루하지도 않았으며 주니어 입장에서 유익한 내용들이었다. 특히 강의자분꼐서 준비된 모습으로 촬영하신 것이 느껴져서 집중이 잘 됐다. 

# 내일 할 일
- 프레임워크에 대한 강의를 보고 정리합시다. 
